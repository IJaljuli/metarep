% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metarepl.R
\name{metarepl}
\alias{metarepl}
\title{Complementing a meta-analysis with Replicability-analysis}
\usage{
metarepl(x, u = 2, common.effect = FALSE, t = NULL, alternative = "two-sided")
}
\arguments{
\item{x}{object of class meta}

\item{u}{replicability requirement. u can be an intiger between 2 and the nmber of studies in the meta-analysis.}

\item{common.effect}{Use common.effect = FALSE (default) for replicability-analysis combining with no assumptions (Pearson or truncated-Pearson test).
Use  TRUE for combining with the assumptions of fixed-effect meta-analysis model.}

\item{t}{truncation threshold for runcated-Pearsons' test. t is ignored if common.effect  = TRUE.}

\item{alternative}{use 'less', 'greater' or 'two-sided'}
}
\value{
The onserted meta object with the replicability resuls in addtion:
\itemize{
\item{r.value}{ \code{r(u)-}value for the specied u. }
\item{side}{The direction of the effect with the lower one-sided \code{r(u)-}value }
\item{worst.case.studies}{list of \code{(n-u+1)} studies names that define supply the \code{r(u)-}value }
\item{u_L , u_R }{ Lower bounds of the number of studies with decreased or increased effect, respectively. Both bounds are reported simultinualsly only when performing replicability analysis for two-sided alternative with no assumptions  }
}
}
\description{
This function perform replicability-analysis on a meta-analysis object of any kind. Replicability analysis can be berformed with or without the common-effect assumption.
}
\examples{
 n.i.1 <- c( 20, 208, 24, 190, 58, 36, 51)
a.i <- c( 2,79,0,98,15,34,9) 
n.i.2 <- c( 20, 119, 22, 185, 29, 51, 47)
c.i <- c(9,106,14,98,12,49,9) 
m1 <- metabin( event.e = a.i,n.e = n.i.1,event.c = c.i,n.c = n.i.2,
               studlab = paste0('Study ' , 1:7) , sm = 'OR' ,comb.fixed = F,comb.random = T )
(mr1 <- metarepl(  m1 , u = 2, common.effect = FALSE , t = 0.05 , alternative = 'two-sided'))
forest(mr1, layout='revman5',digits.pval = 4 , test.overall = T )
}
